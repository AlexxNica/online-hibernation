apiVersion: v1
kind: Template
metadata:
  name: "sleep-idler"
parameters:
- name: QUOTA_HOURS
  description: Maximum quota-hours allowed in period before force sleep
  value: "4m"

- name: TERMINATING_QUOTA
  description: Quota for terminating pods
  value: "500Mi"

- name: NONTERMINATING_QUOTA
  description: Quota for nonterminating pods
  value: "500Mi"

- name: PERIOD
  description: Length of period in hours for quota consumption
  value: "5m"

- name: NAME
  description: The name of the DeploymentConfig.
  value: "sleep-idler"

- name: SLEEP_SYNC_PERIOD
  description: Interval to sync project status
  value: "2m"

- name: PROJECT_SLEEP_LENGTH
  description: Length of time to apply force-sleep to projects over quota.
  value: "2m"

- name: WORKERS
  description: Number of worker threads to process project sync
  value: "10"

- name: EXCLUDE_NAMESPACES
  description: Comma-separated list of namespace to exclude in quota enforcement
  value: "management-infra,openshift,openshift-infra,default,logging,kube-system,kube-public"

- name: IDLE_SYNC_PERIOD
  description: Interval to sync project status for idler
  value: "2m"

- name: IDLE_QUERY_PERIOD
  description: Interval to query project network activity for idler
  value: "2m"

- name: HAWKULAR_URL
  description: Hawkular API url.
  value: "https://hawkular-metrics.openshift-infra.svc.cluster.local"

- name: HAWKULAR_INSECURE
  description: Boolean to allow access to Hawkular API without certs.
  value: "true"

- name: IDLE_THRESHOLD
  description: Network activity received (bytes) or less that will result in idling.
  value: "5000"

- name: IN_CLUSTER
  description: Boolean for whether sleep-idler is running in the cluster.
  value: "true"

- name: IDLE_DRYRUN
  description: Boolean for idler dry-run mode, where projects will be logged but not idled.
  value: "true"

- name: IMAGE_PULL_POLICY
  description: The image pull policy (configurable to facilitate testing)
  value: IfNotPresent

- name: FORCE_SLEEP_IMAGE
  description: The force sleep docker image
  value: sleep-idler:local

- name: LOG_LEVEL
  description: Verbosity level for glogging
  value: "2"

- name: METRICS_PORT
  description: Port to create a service for http metrics requests
  value: "8080"

- name: METRICS_COLLECT_RUNTIME
  description: Enable runtime metrics
  value: "true"

- name: METRICS_COLLECT_CACHE
  description: Enable controller cache metrics
  value: "true"

objects:
# A role for force sleep
- apiVersion: v1
  kind: ClusterRole
  metadata:
    annotations:
      authorization.openshift.io/system-only: "true"
    name: ${NAME}
  rules:
  - resources:
    - projects
    - namespaces
    - pods
    - replicationcontrollers
    - deploymentconfigs
    - resourcequotas
    - services
    - endpoints
    verbs:
    - watch
    - get
    - list
    - create
    - update
    - delete
# A service account for use by force sleep
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: ${NAME}
# A service to expose the metrics server
- apiVersion: v1
  kind: Service
  metadata:
    name: ${NAME}
  spec:
    ports:
    - name: "metrics"
      protocol: TCP
      port: ${METRICS_PORT}
      targetPort: "metrics"
# Binds the service account to the force sleep role
- apiVersion: v1
  kind: ClusterRoleBinding
  metadata:
    name: ${NAME}
  roleRef:
    name: ${NAME}
  subjects:
  - kind: ServiceAccount
    name: ${NAME}
    namespace: openshift-infra
# The force sleep application
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${NAME}
  spec:
    replicas: 1
    selector:
      app: ${NAME}
    strategy:
      type: Recreate
    triggers:
    - type: ConfigChange
    template:
      metadata:
        labels:
          app: ${NAME}
      spec:
        serviceAccountName: ${NAME}
        volumes:
        - name: hawkular
          secret:
            secretName: hawkular-metrics-certs
            items:
            - key: ca.crt
              path: ca.crt
        containers:
        - name: ${NAME}
          image: ${FORCE_SLEEP_IMAGE}
          imagePullPolicy: ${IMAGE_PULL_POLICY}
          ports:
          - name: "metrics"
            containerPort: 8080
            protocol: TCP
          volumeMounts:
          - name: hawkular
            mountPath: /var/run/hawkular
            readOnly: true
          env:
          - name: QUOTA_HOURS
            value: ${QUOTA_HOURS}
          - name: PERIOD
            value: ${PERIOD}
          - name: SLEEP_SYNC_PERIOD
            value: ${SLEEP_SYNC_PERIOD}
          - name: PROJECT_SLEEP_LENGTH
            value: ${PROJECT_SLEEP_LENGTH}
          - name: WORKERS
            value: ${WORKERS}
          - name: EXCLUDE_NAMESPACES
            value: ${EXCLUDE_NAMESPACES}
          - name: TERMINATING_QUOTA
            value: ${TERMINATING_QUOTA}
          - name: NONTERMINATING_QUOTA
            value: ${NONTERMINATING_QUOTA}
          - name: IDLE_SYNC_PERIOD
            value: ${IDLE_SYNC_PERIOD}
          - name: IDLE_QUERY_PERIOD
            value: ${IDLE_QUERY_PERIOD}
          - name: HAWKULAR_URL
            value: ${HAWKULAR_URL}
          - name: HAWKULAR_INSECURE
            value: ${HAWKULAR_INSECURE}
          - name: IDLE_THRESHOLD
            value: ${IDLE_THRESHOLD}
          - name: IN_CLUSTER
            value: ${IN_CLUSTER}
          - name: IDLE_DRYRUN
            value: ${IDLE_DRYRUN}
          - name: LOG_LEVEL
            value: ${LOG_LEVEL}
          - name: METRICS_COLLECT_RUNTIME
            value: ${METRICS_COLLECT_RUNTIME}
          - name: METRICS_COLLECT_CACHE
            value: ${METRICS_COLLECT_CACHE}
          command:
          - /go/bin/force-sleep
          - -quota=$(QUOTA_HOURS)
          - -period=$(PERIOD)
          - -sleep-sync-period=$(SLEEP_SYNC_PERIOD)
          - -z=$(PROJECT_SLEEP_LENGTH)
          - -w=$(WORKERS)
          - -exclude-namespace=$(EXCLUDE_NAMESPACES)
          - -terminating=$(TERMINATING_QUOTA)
          - -nonterminating=$(NONTERMINATING_QUOTA)
          - -idle-sync-period=$(IDLE_SYNC_PERIOD)
          - -idle-query-period=$(IDLE_QUERY_PERIOD)
          - -hawkular-url=$(HAWKULAR_URL)
          - -insecure=$(HAWKULAR_INSECURE)
          - -in-cluster=$(IN_CLUSTER)
          - -idle-dry-run=$(IDLE_DRYRUN)
          - -idle-threshold=${IDLE_THRESHOLD}
          - -v=$(LOG_LEVEL)
          - -logtostderr
          - -collectRuntime=$(METRICS_COLLECT_RUNTIME)
          - -collectCache=$(METRICS_COLLECT_CACHE)
